<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<display-name>springmvc-mybatis</display-name>
	
	<!-- All the requests must be validated by SpringSecurity first -->  
    <filter>  
        <filter-name>springSecurityFilterChain</filter-name>  
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
    </filter>  
  
    <filter-mapping>  
        <filter-name>springSecurityFilterChain</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>
	
	<!-- Character Encoding -->
	<filter> 
    	<filter-name>Set Character Encoding</filter-name> 
    	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> 
	    <init-param> 
	        <param-name>encoding</param-name> 
	        <param-value>UTF-8</param-value> 
	    </init-param> 
    </filter> 
	<filter-mapping> 
	    <filter-name>Set Character Encoding</filter-name> 
	    <url-pattern>/*</url-pattern> 
	</filter-mapping>
		
	<!-- Spring MVC配置 -->
    
	<!-- ====================================== -->
	<servlet>
		<servlet-name>mvc-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 可以自定义servlet.xml配置文件的位置和名称，默认为WEB-INF目录下，名称为[<servlet-name>]-servlet.xml，如spring-servlet.xml-->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>mvc-dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!--　浏览器不支持put,delete等method,由该filter将/blog?_method=delete转换为标准的http　delete方法　-->
	<filter>  
	    <filter-name>HiddenHttpMethodFilter</filter-name>  
	    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>  
	</filter>  
	  
	<filter-mapping>  
	    <filter-name>HiddenHttpMethodFilter</filter-name>  
	    <servlet-name>mvc-dispatcher</servlet-name>  
	</filter-mapping> 
	
	<!-- 主要针对Uploadify session问题构建 -->
	<!-- 
    <listener>
    	<listener-class>com.jtjk.listener.SessionListener</listener-class>  
    </listener>
     -->
	
	<!-- Spring配置 -->
	<!-- ====================================== -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<context-param>
		<param-name>spring.profiles.active</param-name>
		<!-- <param-value>prod</param-value> -->
		<param-value>dev</param-value>
	</context-param>
	
	<!-- 指定Spring Bean的配置文件所在目录。默认配置在WEB-INF目录下 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext.xml
			classpath:spring-security.xml
		</param-value>
	</context-param>
	
	<welcome-file-list>
		<welcome-file>index</welcome-file>
	</welcome-file-list>
	
	<!-- log4j -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>6000</param-value>
	</context-param>
	<listener>
		<listener-class>
		org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>
	
	<!-- 不配置，便于查看错误。配置后，错误不显示
	<error-page>
		<error-code>500</error-code>
		<location>/500.jsp</location>
	</error-page>
	 -->
	 <!-- 
	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>
 	-->
</web-app>