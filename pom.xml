<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.springmvc</groupId>
	<artifactId>springmvc-mybatis</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>
	<name>springmvc-mybatis</name>
	<description>Demo</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- 编译jdk版本 -->
		<jdk.version>1.7</jdk.version>
		<!-- 依赖版本 -->
		<mybatis.version>3.3.1</mybatis.version>
		<mapper.version>3.3.6</mapper.version>
		<pagehelper.version>4.1.1</pagehelper.version>
		<mysql.version>5.1.29</mysql.version>
		<spring.version>4.1.6.RELEASE</spring.version>
		<spring.security.version>3.1.4.RELEASE</spring.security.version>
		<mybatis.spring.version>1.2.5</mybatis.spring.version>
	</properties>

	<!-- maven compile核心版本是1.5，如果不适用，则需要手动修改; maven update project后生效 -->
	<!-- compile需要Window->Preference->Java->Jre Install->选择JDK,非JRE(激活用来编译的版本，一般跟项目JRE一致，该JDK 
		lib下需要包含tools.jar - jdk/lib/tools.jar) -->
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- webapp路径修改：由src/main/webapp修改为webapp -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warSourceDirectory>
						${basedir}/webapp
					</warSourceDirectory>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
		<!-- <filters> <filter>src/main/filters/filter-${env}.properties</filter> 
			</filters> <resources> <resource> <directory>src/main/resources</directory> 
			<filtering>true</filtering> </resource> </resources> -->
	</build>

	<dependencies>
		<!-- struts dependency. require while try HttpServletRequest request=ServletActionContext.getRequest(); -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Include java mail api -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- spring web -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- spring security -->
		<!-- 
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>3.1.4.RELEASE</version>
		</dependency>
		 -->
		<dependency>
	    	<groupId>org.springframework.security</groupId>
	    	<artifactId>spring-security-web</artifactId>
	    	<version>${spring.security.version}</version>
	    </dependency>
	    <dependency>
	    	<groupId>org.springframework.security</groupId>
	    	<artifactId>spring-security-config</artifactId>
	    	<version>${spring.security.version}</version>
	    </dependency>
	    <dependency>
	    	<groupId>org.springframework.security</groupId>
	    	<artifactId>spring-security-taglibs</artifactId>
	    	<version>${spring.security.version}</version>
	    </dependency>

		<!-- spring用到的注解 -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- spring validation -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.1.0.Final</version>
		</dependency>

		<!-- spring json -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.8.4</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.8.4</version>
		</dependency>

		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<classifier>jdk15</classifier>
		</dependency>

		<!-- mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>

		<!--druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.11</version>
		</dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- tab lib: jstl.jar, standard.jar -->
		<!-- standard.jar -->
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>

		<!-- JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.2</version>
		</dependency>

		<!-- spring-hibernate dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.0</version>
		</dependency>

		<!-- spring-aspect dependency -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.8</version>
		</dependency>

		<!-- spring-aspect dependency, require proxy -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.1_3</version>
		</dependency>

		<!-- -->
		<!-- <dependency> <groupId>org.apache.tomcat</groupId> <artifactId>tomcat-coyote</artifactId> 
			<version>7.0.12</version> </dependency> -->

		<!-- Tomcat自带ServletFileUpload，但是Tomcat服务器7.0.12与7.0.42ServletFileUpload接口完全不同 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3</version>
		</dependency>

		<!-- jasypt -->
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt-spring3</artifactId>
			<version>1.9.0</version>
		</dependency>

		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis.spring.version}</version>
		</dependency>

		<!-- base mapper -->
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper</artifactId>
			<version>3.3.8</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>


	</dependencies>

	<!-- Repositories Setting -->
	<repositories>
		<repository>
			<id>maven repo1</id>
			<name>maven repo1</name>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
		
		<!-- apache environment: provide struts -->
		<repository>
			<id>apache.nexus</id>
			<name>ASF Nexus Staging</name>
			<url>https://repository.apache.org/content/groups/staging/</url>
		</repository>

		<repository>
			<id>JBoss repository</id>
			<url>https://repository.jboss.org/nexus/content/repositories/central</url>
		</repository>

		<repository>
			<id>repository.springframework.maven.release</id>
			<name>Spring Framework Maven Release Repository</name>
			<url>http://maven.springframework.org/release</url>
		</repository>

	</repositories>

	<!-- 配置profile：执行 mvn complile -P development，则会读取对应的配置，应用到项目 -->
	<!-- <profiles> <profile> <id>dev</id> <properties> <env>dev</env> </properties> 
		<activation> <activeByDefault>true</activeByDefault> </activation> </profile> 
		<profile> <id>prod</id> <properties> <env>prod</env> </properties> </profile> 
		</profiles> -->


	
</project>