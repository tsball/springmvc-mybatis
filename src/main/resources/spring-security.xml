<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	
	<!--  Spring-Security 的配置 -->
	<!-- 注意开启use-expressions.表示开启表达式.
	see:http://www.family168.com/tutorial/springsecurity3/html/el-access.html
	 -->
	<security:http auto-config="true" use-expressions="true" access-denied-page="/home/deny" >
		
		<security:intercept-url pattern="/home/signin" access="permitAll"/>
		<security:intercept-url pattern="/home/console" access="hasRole('ROLE_ADMIN')"/>
		
		<security:form-login
				login-page="/home/signin" 
				authentication-failure-url="/home/signin?error=true" 
				default-target-url="/home/console"/>
			
		<security:logout 
				invalidate-session="true" 
				logout-success-url="/home/signin" 
				logout-url="/home/signout"/>
	
	</security:http>
	
	<!-- 指定一个自定义的authentication-manager :customUserDetailsService -->
	<security:authentication-manager>
	        <security:authentication-provider user-service-ref="userDetailsService">
	        		<security:password-encoder ref="passwordEncoder"/>
	        </security:authentication-provider>
	</security:authentication-manager>
	
	<!-- 对密码进行MD5编码 -->
	<!-- <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" /> -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

	<!-- 
		通过 customUserDetailsService,Spring会自动的用户的访问级别.
		也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联.
	 -->
	<bean id="userDetailsService" class="com.springmvc.service.impl.UserDetailsServiceImpl"/>
	
</beans>